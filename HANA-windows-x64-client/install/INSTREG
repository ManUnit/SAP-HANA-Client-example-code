HASH(""PACKAGES"" => HASH(""hanamlr"" => HASH(""isClientPackage"" => ""1"";;""git_hash"" => ""2708a618ba5d44937cca75de0ea8c41a396838bd"";;""name"" => ""R Machine Learning Client"";;""script"" => ""1\;

"";;""version"" => ""2.11.14.1636568807"";;""checksum"" => ""2b1ad919ca263de70c91f0e0a300aabe"";;""modtime"" => ""1673098854"";;""type"" => undef;;""desc"" => ""R Machine Learning Client for SAP HANA"";;""debugArchive"" => undef;;""files"" => HASH(""hana.ml.r_2.11.21121100.tar.gz"" => HASH(""mtime"" => ""1636744250"";;""mode"" => ""292"";;""checksum"" => ""0ff618a8bcbe976542fefa4f1cb844c2"";;""size"" => ""1024583""));;""requires"" => ARRAY(HASH(""id"" => ""manifest"";;""str"" => ""manifest"");;HASH(""id"" => ""odbc"";;""str"" => ""odbc""));;""size"" => ""1024583"";;""buildstring"" => ""2.11.14.1636568807"";;""valid"" => ""1"");;""sqldbc"" => HASH(""debugArchive"" => ""SQLDBC.DEBUG.TGZ"";;""desc"" => ""C/C++ interface"";;""requires"" => ARRAY(HASH(""str"" => ""manifest"";;""id"" => ""manifest""));;""files"" => HASH(""hdbsqldbc_cons.exe"" => HASH(""checksum"" => ""8d2fdb52f1d1e4a4336876924078dab8"";;""mode"" => ""365"";;""mtime"" => ""1636744653"";;""size"" => ""1409144"");;""hdbsql.exe"" => HASH(""mtime"" => ""1636744628"";;""checksum"" => ""410ee72be1a8ff7fbe65acaf28b55eaf"";;""mode"" => ""365"";;""size"" => ""8715896"");;""hdbkeystore.exe"" => HASH(""mtime"" => ""1636744653"";;""mode"" => ""365"";;""checksum"" => ""6f39dc242b7b8ed32734e4d05e877e2b"";;""size"" => ""1085048"");;""hdbuserstore.exe"" => HASH(""mtime"" => ""1636744653"";;""mode"" => ""365"";;""checksum"" => ""2412833e3583d548895694e12ede268d"";;""size"" => ""1402488"");;""hdbsql.pdb"" => HASH(""checksum"" => ""6c46662e312b9e103939657b9fb66767"";;""mode"" => ""420"";;""mtime"" => ""1636744624"";;""size"" => ""7908352"";;""dbg"" => ""1"");;""hdbuserstore.pdb"" => HASH(""mtime"" => ""1636744649"";;""mode"" => ""420"";;""checksum"" => ""cdc9cc3a065cffd45c0c14b109445981"";;""dbg"" => ""1"";;""size"" => ""3165184"");;""libSQLDBCHDB.dll"" => HASH(""checksum"" => ""fc5f4f6977a3736669fc3f9ca12c0667"";;""mode"" => ""292"";;""mtime"" => ""1636744619"";;""size"" => ""8493176"");;""libSQLDBCHDB.pdb"" => HASH(""mode"" => ""420"";;""checksum"" => ""031f25f89b73665f79dca38e44e3c5ef"";;""mtime"" => ""1636744610"";;""size"" => ""7703552"";;""dbg"" => ""1""));;""version"" => ""2.11.14.1636568807"";;""modtime"" => ""1673098849"";;""type"" => undef;;""checksum"" => ""3d30fef9fcea4e05e65feb4b613bda99"";;""script"" => ""use SDB::Install::SysVars\;
use SDB::Install::System qw \(exec_program\)\;

use strict\;

our $listname = 'hdbclient.lst'\;

sub getExternalFileListName{
    return $listname\;
}

sub Postinstall\(\) {
        my \(
            $self
        \) = @_\;
        my $path = $self->getPath\(\)\;
        my $exeExt = $isWin ? '.exe' : ''\;
        my $sqldbcCons = $path.$path_separator.'hdbsqldbc_cons'.$exeExt\;
        if\(-f $sqldbcCons\) {
            $self->AddMessage\(\"Running $sqldbcCons to detect and remove invalid shared memory.\"\)\;
            my $rc = exec_program\($sqldbcCons, ['-w', '256']\)\;
            if\(defined $rc\) { 
                $self->AddMessage\(\"$sqldbcCons returned $rc.\"\)\;
            }
        }
        return 1\;
}

1\;
"";;""isClientPackage"" => ""1"";;""git_hash"" => ""2708a618ba5d44937cca75de0ea8c41a396838bd"";;""name"" => ""SQLDBC"";;""valid"" => ""1"";;""size"" => ""39882840"";;""buildstring"" => ""2.11.14.1636568807"");;""repotools"" => HASH(""desc"" => ""Repository Tools"";;""debugArchive"" => undef;;""requires"" => ARRAY(HASH(""str"" => ""manifest"";;""id"" => ""manifest""));;""files"" => HASH(""rtt/lib/tc_mlt_tsapi-0.0.361016.jar"" => HASH(""mode"" => ""420"";;""checksum"" => ""cc6f1efe75ccdcf67ddd7e6d64160765"";;""mtime"" => ""1636744602"";;""size"" => ""286833"");;""rtt/lib/sapjco3.dll"" => HASH(""size"" => ""4859392"";;""mtime"" => ""1636744602"";;""mode"" => ""420"";;""checksum"" => ""262cfa0133e2109ea4baaea3ec87c2ec"");;""rtt/lib/tc_mlt_base-0.0.361795.jar"" => HASH(""checksum"" => ""cdf3bb3ea1bded0b48d6c46ce98f4286"";;""mode"" => ""420"";;""mtime"" => ""1636744602"";;""size"" => ""930176"");;""rtt/lib/sapjco3.jar"" => HASH(""size"" => ""1478758"";;""mtime"" => ""1636744602"";;""checksum"" => ""a00c344db3c8e633838cabe3a099377e"";;""mode"" => ""420"");;""rtt/lib/json-rpc-1.0.jar"" => HASH(""checksum"" => ""d22063588616576c96d6525cae502f38"";;""mode"" => ""420"";;""mtime"" => ""1636744602"";;""size"" => ""76889"");;""regi.exe"" => HASH(""size"" => ""10486904"";;""mtime"" => ""1636744678"";;""mode"" => ""365"";;""checksum"" => ""161d01831e8e0ed32913fa8e2361cd22"");;""rtt/lib/xliff_api-1.2.jar"" => HASH(""checksum"" => ""187ad96084d163cfce346c197fcd10c1"";;""mode"" => ""420"";;""mtime"" => ""1636744602"";;""size"" => ""252874"");;""rtt/lib/rtt.jar"" => HASH(""mode"" => ""420"";;""checksum"" => ""8e9f27532bde7114269ea0adc174dd2c"";;""mtime"" => ""1636744602"";;""size"" => ""99705"");;""rtt/lib/xliff_core-1.2.jar"" => HASH(""size"" => ""506895"";;""mode"" => ""420"";;""checksum"" => ""c1688203b65da8fd62d3f2094521f0e8"";;""mtime"" => ""1636744602"");;""rtt.bat"" => HASH(""mode"" => ""493"";;""checksum"" => ""b1240ffc89de920e38b19fc7f0b4b44b"";;""mtime"" => ""1636744602"";;""size"" => ""92"");;""rtt/lib/xliff_sapmetadata-1.2.jar"" => HASH(""size"" => ""41316"";;""mtime"" => ""1636744602"";;""checksum"" => ""9541dde394fb88eadc69a6dba0952404"";;""mode"" => ""420"");;""rtt/lib/tc_logging_java-1.0.0.jar"" => HASH(""mode"" => ""420"";;""checksum"" => ""3c0c956b47998cd4fd4695d39d2f25d1"";;""mtime"" => ""1636744602"";;""size"" => ""311230"");;""rtt/Readme.txt"" => HASH(""size"" => ""21625"";;""mtime"" => ""1636744602"";;""checksum"" => ""7ed43ead686b494aee795dc49d6f4abf"";;""mode"" => ""420"");;""rtt/rtt.properties"" => HASH(""size"" => ""476"";;""mtime"" => ""1636744602"";;""mode"" => ""420"";;""checksum"" => ""b87bbc44f8455a0ed71f0755d9dea842""));;""version"" => ""2.11.14.1636568807"";;""modtime"" => ""1673098851"";;""type"" => undef;;""checksum"" => ""e196f5449d64a6b1dc4ed76353f0cd16"";;""script"" => ""use strict\;

our $listname = 'hdbclient.lst'\;

sub getExternalFileListName{
    return $listname\;
}

1\;
"";;""isClientPackage"" => ""1"";;""git_hash"" => ""2708a618ba5d44937cca75de0ea8c41a396838bd"";;""name"" => ""REPOTOOLS"";;""valid"" => ""1"";;""size"" => ""19353165"";;""buildstring"" => ""2.11.14.1636568807"");;""dbcapi"" => HASH(""valid"" => ""1"";;""size"" => ""16257144"";;""buildstring"" => ""2.11.14.1636568807"";;""type"" => undef;;""modtime"" => ""1673098856"";;""checksum"" => ""94f380dac70e82b469e4e9b38980fea4"";;""version"" => ""2.11.14.1636568807"";;""requires"" => ARRAY(HASH(""id"" => ""manifest"";;""str"" => ""manifest""));;""files"" => HASH(""libdbcapiHDB.dll"" => HASH(""size"" => ""8520824"";;""mtime"" => ""1636744619"";;""mode"" => ""292"";;""checksum"" => ""45204cf847ae747443550f14ceed881a"");;""libdbcapiHDB.pdb"" => HASH(""dbg"" => ""1"";;""size"" => ""7736320"";;""mtime"" => ""1636744616"";;""checksum"" => ""063d50819d507e24be6bae5ad6724c6c"";;""mode"" => ""420""));;""debugArchive"" => ""DBCAPI.DEBUG.TGZ"";;""desc"" => ""C/C++ DBCAPI interface"";;""name"" => ""DBCAPI"";;""isClientPackage"" => ""1"";;""git_hash"" => ""2708a618ba5d44937cca75de0ea8c41a396838bd"";;""script"" => ""use SDB::Install::SysVars\;
use SDB::Install::System qw \(exec_program\)\;

use strict\;

1\;
"");;""clientInstaller"" => HASH(""name"" => ""Client Installer"";;""git_hash"" => ""934c53a182f3"";;""script"" => ""use SDB::Install::System\;
use SAPDB::Install::MD5Sum\;
use SDB::Install::Tools\;
use SDB::Install::SysVars qw \($isWin $path_separator\)\;

sub initPackage{
	my \($self\) = @_\;
	if \($self->isa \('SDB::Install::Package::Installable'\)\){
		$self->FindKitFiles \(\)\;
		my %union = \(%{$self->{data}->{files}},%{$self->{kitfiles}}\)\;
		my $tmp\;
		my $size = 0\;
		foreach my $key \(sort keys \(%union\)\){
			$tmp .= $union{$key}->{checksum}\;
			$size +=  $union{$key}->{size}\;
		}
		$self->{data}->{checksum} = MD5Str \($tmp\)\;
		$self->{data}->{size} = $size\;
	}
	return 1\;
}

sub GetNumberOfFiles \($\) {
    my \($self\) = @_\;
    my $nFiles = $self->SUPER::GetNumberOfFiles\(\)\;

    if \($self->isa \('SDB::Install::Package::Installable'\) && defined $self->{kitfiles}\){
        $nFiles += scalar keys %{$self->{kitfiles}}\;
    }
    return $nFiles\;
}

sub FindKitFiles{
    my \($self\) = @_\;
    $self->AddMessage \('Installer is part of installation kit'\)\;
    require SDB::Install::Installer\;
    my $installer = new SDB::Install::Installer \(\)\;
    my $dir\;
    if \($installer->can\('getInstRuntimeDir'\)\){
       $dir = $installer->getInstRuntimeDir\(\)\;
    }
    else{
       $dir = $installer->getInstallerDir\(\) . $path_separator . 'instruntime'\;
    }
    my $entries = find \($dir, $self, FIND_TYPE_FILE, undef, undef, '/'\)\;
    if \(!defined $entries\){
        return undef\;
    }
    my %filelist\;
    my %filesource\;
    my $prefix  = 'install'.$path_separator.'instruntime'\;
    my $file\;
    my @statbuf\;
    foreach $entry \(@$entries\){
        $file = $dir . $path_separator . $entry\;
        @statbuf = stat \($file\)\;
        my %info = \(
                'checksum' => MD5Sum \($file\),
                'size' => $statbuf [7],
                'mode' => $statbuf [2] & 07777,
                'mtime' => $statbuf [9]
                \)\;

        $filelist{$prefix .'/'. $entry} = \%info\;
        $filesource{$prefix .'/'. $entry} = $file\;
    }
    if \($isWin\){
        $prefix = 'install'\;
        my @entries\;
        my $installerDir = $installer->getInstallerDir \(\)\;
        if \(opendir \(DH, $installerDir\)\){
            @entries = grep {/^\(msv|vcruntime\).*\.dll$/i} readdir \(DH\)\;
            closedir \(DH\)\;
        }
        foreach $entry \(@entries\){
            $file = $installerDir . $path_separator . $entry\;
            @statbuf = stat \($file\)\;
            my %info = \(
                'checksum' => MD5Sum \($file\),
                'size' => $statbuf [7],
                'mode' => $statbuf [2] & 07777,
                'mtime' => $statbuf [9]
                \)\;
            $filelist{$prefix .'/'. $entry} = \%info\;
            $filesource{$prefix .'/'. $entry} = $file\;
        }
    }
    $self->{kitfiles} = \%filelist\;
    $self->{filesource} = \%filesource\;
    return 1\;
}

sub Extract{
	my \($self, $destdir\) = @_\;
	if \($self->isa \('SDB::Install::Package::Installed'\)\){
		die \(\"Extract \(\) is not allowed in this context.\n\"\)\;
	}
	# extract files from archive:
	unless \(defined $self->SUPER::Extract\(\)\){
		return undef\;
	}
	# copy files from installation kit and add them:
	unless \(defined $self->{kitfiles}\){
		$self->FindKitFiles \(\)\;
	}
	my $config = {'createdir' => 1}\;
	if \($^O !~ /mswin/i\){
		$config->{uid} = $self->{installation}->getUID \(\)\;
		$config->{gid} = $self->{installation}->getGID\(\)\;
	}
	my $files = $self->{kitfiles}\;
	my $mode\;
	my $path = defined $destdir ? $destdir : $self->getPath \(\)\;
	foreach my $file \(keys \(%$files\)\){
		my $msg = $self->AddProgressMessage \('copying '.$file\)\;
		my $do_chmod = 0\;
		if \($file =~ /\.tgz$/i\){
			$mode = 0444\;
		}
		else{
			$mode = 0555\;
		}
		if \($^O !~ /mswin/i and $files->{$file}->{mode} != $mode\){
			$files->{$file}->{mode} = $mode\;
			$do_chmod = 1\;
		}
		$msg->{submsg} = [$self->GenMsg \('INFO', sprintf \(\"file info: mode = 0%o, size = %d bytes\", $files->{$file}->{mode} & 07777,$files->{$file}->{size}\)\)]\;
		# try to remove readonly attribute on windows:
		if \($isWin\){
			my @stat = stat \($path.'/'.$file\)\;
			if \(@stat && \($stat[2] & 0222\) == 0\){
				chmod \($stat[2] | 0222, $path.'/'.$file\)\;
			}
		}
		unless \(defined copy_file \($self->{filesource}->{$file},$path.'/'.$file,$config\)\){
			$self->AddError \('cannot copy file '.$file ,$config\)\;
			return undef\;
		}
		if \($do_chmod\){
			if \(! chmod \($files->{$file}->{mode}, $path.'/'.$file\)\){
				$self->AddError \(\"cannot chmod file $path/$file: $!\"\)\;
				return undef\;
			}
		}
		$self->{data}->{files}->{$file} = $files->{$file}\;
	}
	return 1\;
}

sub Postuninstall{
	# Change the current working directory, because installer uses its
	# runtime directory for this purpose.
	# Otherwise the installer directory will survive the uninstallation
	# on Windows:
	if \($isWin\){
		chdir \('C:\\'\)\;
	}
	return 1\;
}


#This function overrides 'getShortcutDefinitions'
#from 'Package.pm'.
sub getShortcutDefinitions {
    my \($self\) = @_\;
    my $retval\;
        $retval = []\;
    return $retval\;
}

1\;

"";;""checksum"" => ""6b928db34e769f4718fa455679d4bb63"";;""type"" => undef;;""modtime"" => ""1673098874"";;""version"" => ""2.6.48.0"";;""files"" => HASH(""install\instruntime/overloading.pm"" => HASH(""size"" => ""1808"";;""mtime"" => ""1636745086"";;""checksum"" => ""36e1b34f8175e036d57e51fd7d56becd"";;""mode"" => ""438"");;""install\instruntime/HiRes.dll"" => HASH(""size"" => ""21504"";;""mode"" => ""438"";;""checksum"" => ""b7fb8f767ba7fa3ae54ba7f7acdd403e"";;""mtime"" => ""1636745086"");;""install\instruntime/Dumper.dll"" => HASH(""size"" => ""30720"";;""mtime"" => ""1636745086"";;""mode"" => ""438"";;""checksum"" => ""f9de4c87a25bcf05656b0798d4d0d67b"");;""install\instruntime/strict.pm"" => HASH(""mtime"" => ""1636745086"";;""mode"" => ""438"";;""checksum"" => ""441328c7ffbbe42a0226ec65bde71715"";;""size"" => ""4738"");;""install\instruntime/DND.dll"" => HASH(""size"" => ""65024"";;""checksum"" => ""17a3b4a70091bc6a63905f75eaf4bf53"";;""mode"" => ""438"";;""mtime"" => ""1636745086"");;""install\instruntime/Base64.dll"" => HASH(""mode"" => ""438"";;""checksum"" => ""eb20df64f34b5a036da5db97ed8a1719"";;""mtime"" => ""1636745086"";;""size"" => ""15872"");;""install\instruntime/vars.pm"" => HASH(""size"" => ""2458"";;""mode"" => ""438"";;""checksum"" => ""fec1c1985d96c2edd842ff2b71821afb"";;""mtime"" => ""1636745086"");;""install\instruntime/sdbrun.dll"" => HASH(""mtime"" => ""1636745086"";;""checksum"" => ""e160d58e4240fd3c16cebd4574766af7"";;""mode"" => ""438"";;""size"" => ""1257472"");;""install\instruntime/lcm_pm_ext.tgz"" => HASH(""checksum"" => ""5c0dc2d424826133a964f1742049b5f3"";;""mode"" => ""438"";;""mtime"" => ""1636745086"";;""size"" => ""1208223"");;""install\instruntime/wxmsw30u_vc_sdb.dll"" => HASH(""size"" => ""13306368"";;""mtime"" => ""1636745086"";;""checksum"" => ""986b42c5316a7d56ba0fb68275c4732e"";;""mode"" => ""438"");;""install/hdbuninst.exe"" => HASH(""size"" => ""51320"";;""checksum"" => ""ac81468770eac2b33e46b06f7710be43"";;""mode"" => ""493"";;""mtime"" => ""1631714827"");;""install\instruntime/overload.pm"" => HASH(""mtime"" => ""1636745086"";;""mode"" => ""438"";;""checksum"" => ""ae1657871c87fe4782c6468e70a6463f"";;""size"" => ""53302"");;""install\instruntime/lcm_res.tgz"" => HASH(""mtime"" => ""1636745086"";;""mode"" => ""438"";;""checksum"" => ""66737108b35e38f4e46316836e0f7de6"";;""size"" => ""30678"");;""install/vcruntime140.dll"" => HASH(""size"" => ""85232"";;""mtime"" => ""1636745086"";;""checksum"" => ""0c583614eb8ffb4c8c2d9e9880220f1d"";;""mode"" => ""438"");;""install\instruntime/FCGI.dll"" => HASH(""checksum"" => ""4f69861c82d4a6182f3544d1131e91d8"";;""mode"" => ""438"";;""mtime"" => ""1636745086"";;""size"" => ""49664"");;""install\instruntime/Socket.dll"" => HASH(""size"" => ""31744"";;""checksum"" => ""b93aba1e9f7f9b75d99d7665ba637c80"";;""mode"" => ""438"";;""mtime"" => ""1636745086"");;""install/hdbclientreg.exe"" => HASH(""size"" => ""51320"";;""mtime"" => ""1631714827"";;""checksum"" => ""0f2d685f6a913502c1dbb5010d9fb0cf"";;""mode"" => ""493"");;""install\instruntime/SHA.dll"" => HASH(""mtime"" => ""1636745086"";;""checksum"" => ""344aa61389a85fae169662253f3d2bec"";;""mode"" => ""438"";;""size"" => ""39936"");;""install\instruntime/Cwd.dll"" => HASH(""mtime"" => ""1636745086"";;""checksum"" => ""2140e590c66755778d81163c960efa41"";;""mode"" => ""438"";;""size"" => ""17408"");;""install/hdbinst.exe"" => HASH(""mtime"" => ""1631714827"";;""mode"" => ""493"";;""checksum"" => ""680aedc20b73fe26d6805a6c6fc19cc4"";;""size"" => ""51320"");;""install\instruntime/warnings.pm"" => HASH(""size"" => ""50537"";;""mode"" => ""438"";;""checksum"" => ""9e4fb3e9ce2ce52fa241d7147c361133"";;""mtime"" => ""1636745086"");;""install\instruntime/perl532.dll"" => HASH(""mode"" => ""438"";;""checksum"" => ""11186a2f825b8f2b61dc891a4d8d72f0"";;""mtime"" => ""1636745086"";;""size"" => ""3076608"");;""install\instruntime/Grid.dll"" => HASH(""mode"" => ""438"";;""checksum"" => ""ee0c1e43403e152dd35bf078924e0ff4"";;""mtime"" => ""1636745086"";;""size"" => ""267264"");;""install\instruntime/Getopt/Long.pm"" => HASH(""mode"" => ""438"";;""checksum"" => ""7119f2c25b6e2352580da9b6a84c9ab9"";;""mtime"" => ""1636745086"";;""size"" => ""83322"");;""install\instruntime/Exporter/Heavy.pm"" => HASH(""size"" => ""6561"";;""mtime"" => ""1636745086"";;""checksum"" => ""20279b94df9b9dbc76a3b4d0439324a8"";;""mode"" => ""438"");;""install\instruntime/version.pm"" => HASH(""mtime"" => ""1636745086"";;""checksum"" => ""e60bdde345251ac96b5f59aaeb77b683"";;""mode"" => ""438"";;""size"" => ""1976"");;""install\instruntime/Win32.dll"" => HASH(""size"" => ""44544"";;""mtime"" => ""1636745086"";;""mode"" => ""438"";;""checksum"" => ""d2a3f916180548c97171ede21a5b5be8"");;""install\instruntime/constant.pm"" => HASH(""size"" => ""14724"";;""mtime"" => ""1636745086"";;""checksum"" => ""56cde6eba0f667ab56196613df3933c1"";;""mode"" => ""438"");;""install\instruntime/IO.dll"" => HASH(""size"" => ""19456"";;""mtime"" => ""1636745086"";;""checksum"" => ""c5f75c54f282a24616d5cd4de008a65b"";;""mode"" => ""438"");;""install\instruntime/warnings/register.pm"" => HASH(""checksum"" => ""2d8f6ce093a2176b982c0e12c0194b3b"";;""mode"" => ""438"";;""mtime"" => ""1636745086"";;""size"" => ""759"");;""install\instruntime/Carp.pm"" => HASH(""mode"" => ""438"";;""checksum"" => ""01d59a664a69ffaed1bd0300ba0c7134"";;""mtime"" => ""1636745086"";;""size"" => ""35959"");;""install\instruntime/Exporter.pm"" => HASH(""size"" => ""18805"";;""mtime"" => ""1636745086"";;""mode"" => ""438"";;""checksum"" => ""ab8a4ab48b1da0cfd98aea5e8dd82be9"");;""install\instruntime/msvcp140.dll"" => HASH(""mtime"" => ""1636745086"";;""mode"" => ""438"";;""checksum"" => ""ba72c2f6f465926980adc2fb7f8b3490"";;""size"" => ""627440"");;""install\instruntime/Wx.dll"" => HASH(""mtime"" => ""1636745086"";;""checksum"" => ""9db3224431caf2632f992e23c0e375eb"";;""mode"" => ""438"";;""size"" => ""2827776"");;""install\instruntime/lcm_pm.tgz"" => HASH(""checksum"" => ""b4b9064f62df207975409e8622aac825"";;""mode"" => ""438"";;""mtime"" => ""1636745086"";;""size"" => ""1434127"");;""install\instruntime/version/regex.pm"" => HASH(""mode"" => ""438"";;""checksum"" => ""1804cdcea69766fe0b4587f713779d20"";;""mtime"" => ""1636745086"";;""size"" => ""4072"");;""install\instruntime/Encode.dll"" => HASH(""mtime"" => ""1636745086"";;""mode"" => ""438"";;""checksum"" => ""0e01cbc55adab6751a688b7196d6e9b5"";;""size"" => ""35328""));;""desc"" => ""Resident Installation Tools for HANA Client"";;""debugArchive"" => undef;;""size"" => ""24925369"";;""buildstring"" => ""2.6.48"";;""valid"" => ""1"");;""ruby"" => HASH(""buildstring"" => ""2.11.14.1636568807"";;""size"" => ""3581440"";;""valid"" => ""1"";;""git_hash"" => ""2708a618ba5d44937cca75de0ea8c41a396838bd"";;""isClientPackage"" => ""1"";;""name"" => ""Ruby Client"";;""script"" => ""use SDB::Install::SysVars\;
use SDB::Install::System qw \(exec_program\)\;

use strict\;

1\;
"";;""version"" => ""2.11.14.1636568807"";;""checksum"" => ""907a3aecd64693aee3bfee6c03cb88b0"";;""modtime"" => ""1673098857"";;""type"" => undef;;""desc"" => ""Ruby Client Interface"";;""debugArchive"" => undef;;""files"" => HASH(""ruby/activerecord/activerecord-hanaclient-adapter-2.11.14.gem"" => HASH(""size"" => ""12288"";;""mode"" => ""420"";;""checksum"" => ""e01b4dd8c2b510817876565ba9a0e4b4"";;""mtime"" => ""1636744628"");;""ruby/hanaclient/hanaclient-2.11.14-x64-mingw32.gem"" => HASH(""size"" => ""3569152"";;""checksum"" => ""da43ea5078d957664d22c03b7da4c2bf"";;""mode"" => ""420"";;""mtime"" => ""1636744628""));;""requires"" => ARRAY(HASH(""str"" => ""manifest"";;""id"" => ""manifest"");;HASH(""id"" => ""dbcapi"";;""str"" => ""dbcapi"")));;""adonet"" => HASH(""name"" => ""ADO.NET"";;""git_hash"" => ""2708a618ba5d44937cca75de0ea8c41a396838bd"";;""isClientPackage"" => ""1"";;""script"" => ""use SDB::Install::SysVars\;
# use SDB::Install::DebugUtilities\;
use LCM::ProcessExecutor\;
use SAPDB::Install::System::Win32::Registry\;

#----------------------------------------------------------------------------

sub Postinstall\(\) {
    my \(
        $self
    \) = @_\;
    return $self->_install\(1\)\;
}

#----------------------------------------------------------------------------

sub Preuninstall\(\) {
    my \(
        $self
    \) = @_\;
    return $self->_install\(0\)\;
}

#----------------------------------------------------------------------------

sub _install\(\) {
    my \(
        $self,
        $register # 1 for install, 0 for uninstall
    \) = @_\;
    my $path = $self->getPath\(\)\;
    my $dotnetInfo = $self->_getDotNetInfo\(\)\;
    if\(not defined $dotnetInfo\) {
        return undef\;
    }
    my $actionCaption = $register ? 'Registering' : 'Unregistering'\;
    if\(not $dotnetInfo\) {
        $self->AddMessage\(\"Not $actionCaption ADO.NET provider:  no suitable .NET version found.\"\)\;
        return 1\;
    }
    my $adoDir = $path.'\\ado.net'\;
    my $dotnetVersion = $dotnetInfo->{'version'}\;
    my $msg = $self->AddMessage\(\"$actionCaption ADO.NET provider for $dotnetVersion\"\)\;
    my $adoSetup = $adoDir.'\\'.$dotnetInfo->{'setup'}\;
    my $exer = undef\;
    my \($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst\) = localtime\(\)\;
    my $timestamp = sprintf\(\"%04d%02d%02d%02d%02d\", $year, $mon, $mday, $hour, $min\)\;
    if\($register\) {
        # e.g. \"C:\hdbclient\ado.net\v4.5\SetupNet.v4.5.exe /i /hl C:\hdbclient\ado.net /log %TEMP%\hdbadonet-yyyymmddhhss-install.log /silent\"
        $exer = new LCM::ProcessExecutor\($adoSetup, [ '/i', '/hl', $adoDir, '/log', $ENV{'TEMP'}.\"\\hdbadonet-$timestamp-install.log\" ]\)\;
    }
    else {
        # e.g. \"C:\hdbclient\ado.net\v4.5\SetupNet.v4.5.exe /silent /log %TEMP%\hdbadonet-yyyymmddhhss-uninstall.log /u\"
        $exer = new LCM::ProcessExecutor\($adoSetup, [ '/log', $ENV{'TEMP'}.\"\\hdbadonet-$timestamp-uninstall.log\", '/u' ]\)\;
    }
    my $exitCode = $exer->executeProgram\(\)\;
    if \(!defined $exitCode || $exitCode\){
        $self->AddSubMsgLst \($msg, $exer->getMsgLst\(\)\)\;
        $self->AddError\($exer->getErrorString\(\)\)\;
        return undef\;
    }
    $self->AddSubMsgLst \($msg, $exer->getMsgLst\(\)\)\;
    return 1\;
}

#----------------------------------------------------------------------------

# returns one hash from the list below, or 0 for nothing found\(, or undef for error\)
sub _getDotNetInfo\(\) {
    my \(
        $self
    \) = @_\;
    my $rootKey = HKEY_LOCAL_MACHINE\;
    my $versions = [ # first match will be processed in _install\(\):
        {
            'version' => 'v4.5', # for display in output and log.
            'regKey'  => 'SOFTWARE\\Microsoft\\NET Framework Setup\\NDP\\v4\\Client',
            'setup'   => 'v4.5\\SetupNet.v4.5.exe'
        },
        {
            'version' => 'v3.5', # for display in output and log.
            'regKey'  => 'SOFTWARE\\Microsoft\\NET Framework Setup\\NDP\\v2.0.50727',
            'setup'   => 'v3.5\\SetupNet.v3.5.exe'
        }
    ]\;
    my $retval = 0\;
    foreach $entry \(@{$versions}\) {
        my $hKey\;
        my $desi = KEY_QUERY_VALUE | KEY_WOW64_64KEY\;
        my $rc = RegOpenKeyEx\($rootKey, $entry->{'regKey'}, 0, $desi, $hKey\)\;
        if\($rc != 0\) {
            next\;
        }
        my $str\;
        my $size\;
        $rc = RegQueryValueEx\($hKey, \"Install\", 0, 0, $str, \$size\)\;
        if\($rc == 0\) {
            $retval = $entry\;
            RegCloseKey\($hKey\)\;
            last\;
        }
    }
    return $retval\;
}

1\;
"";;""checksum"" => ""4c11b4dadcbd147dc2a6221d629ec3e9"";;""type"" => undef;;""modtime"" => ""1673098868"";;""version"" => ""2.11.14.1636568807"";;""files"" => HASH(""ado.net/v4.5/Sap.Data.Hana.v4.5.pdb"" => HASH(""size"" => ""744960"";;""dbg"" => ""1"";;""mode"" => ""420"";;""checksum"" => ""f2a4415ad05cea8103e777e3162b9165"";;""mtime"" => ""1636744313"");;""ado.net/v3.5/Sap.Data.Hana.v3.5.dll"" => HASH(""mode"" => ""292"";;""checksum"" => ""42ca98d895e310af59c85364f3ddcc63"";;""mtime"" => ""1636744315"";;""size"" => ""269944"");;""ado.net/libadonetHDB.pdb"" => HASH(""mtime"" => ""1636744652"";;""checksum"" => ""2645cb385350a790ac9d9198b5b8eebd"";;""mode"" => ""420"";;""dbg"" => ""1"";;""size"" => ""7752704"");;""ado.net/v3.5/policy.2.11.Sap.Data.Hana.v3.5.dll"" => HASH(""size"" => ""11896"";;""mtime"" => ""1636744314"";;""checksum"" => ""677675654494dfa4f18ca679a218fdeb"";;""mode"" => ""292"");;""ado.net/v4.5/Sap.Data.Hana.v4.5.dll"" => HASH(""mtime"" => ""1636744315"";;""checksum"" => ""2759b31e1579a387d5123eaa00ec3b7b"";;""mode"" => ""292"";;""size"" => ""515704"");;""ado.net/v4.5/SetupNet.v4.5.exe"" => HASH(""size"" => ""63096"";;""checksum"" => ""5b48a94aafd0c2dece0119e8626d0d56"";;""mode"" => ""365"";;""mtime"" => ""1636744316"");;""ado.net/v3.5/Sap.VSPackage.Hana.dll"" => HASH(""mtime"" => ""1636744317"";;""checksum"" => ""3f46ddd22ba183fcbaf15cc59afc6e9a"";;""mode"" => ""292"";;""size"" => ""168568"");;""ado.net/libadonetHDB.dll"" => HASH(""size"" => ""8538232"";;""mode"" => ""292"";;""checksum"" => ""e325668d6e8e90b7a7e3302a82b28820"";;""mtime"" => ""1636744656"");;""ado.net/v4.5/Sap.Data.Hana.v4.5.xml"" => HASH(""mtime"" => ""1636744313"";;""checksum"" => ""15df08092a50e550b64f1b9357f6fef0"";;""mode"" => ""420"";;""size"" => ""383852"");;""ado.net/v4.5/Sap.Data.Hana.v4.5.dll.config"" => HASH(""mode"" => ""420"";;""checksum"" => ""d9fe48010616dfbc2371aa34af8e6dc4"";;""mtime"" => ""1636744313"";;""size"" => ""482"");;""ado.net/libadonetHDB32.dll"" => HASH(""checksum"" => ""125f67faccb9a3b14ea8b6996879e546"";;""mode"" => ""292"";;""mtime"" => ""1636744459"";;""size"" => ""7914104"");;""ado.net/v3.5/Sap.VSPackage.Hana.pdb"" => HASH(""mode"" => ""420"";;""checksum"" => ""1d7aacf7e346a62c56bcc3b9ff536aae"";;""mtime"" => ""1636744315"";;""size"" => ""128512"";;""dbg"" => ""1"");;""ado.net/libadonetHDB32.pdb"" => HASH(""mode"" => ""420"";;""checksum"" => ""31fbaaa697928cce234465ea799683e6"";;""mtime"" => ""1636744456"";;""size"" => ""6933504"";;""dbg"" => ""1"");;""ado.net/v3.5/SetupNet.v3.5.exe"" => HASH(""size"" => ""73336"";;""checksum"" => ""8da3c68d13d745c9e7a508f4a2f9ba74"";;""mode"" => ""365"";;""mtime"" => ""1636744316"");;""ado.net/v4.5/policy.2.11.Sap.Data.Hana.v4.5.dll"" => HASH(""size"" => ""11896"";;""checksum"" => ""ea7fff565649814a57d748ec49347915"";;""mode"" => ""292"";;""mtime"" => ""1636744314"");;""ado.net/v3.5/Sap.Data.Hana.v3.5.dll.config"" => HASH(""size"" => ""482"";;""mtime"" => ""1636744296"";;""checksum"" => ""175c979d570316b4dfcdcda2472e434f"";;""mode"" => ""420"");;""ado.net/v3.5/Sap.Data.Hana.v3.5.xml"" => HASH(""checksum"" => ""8eec10f681e198814c5bddf96647c9da"";;""mode"" => ""420"";;""mtime"" => ""1636744312"";;""size"" => ""268036"");;""ado.net/v4.5/SSDLToHana.tt"" => HASH(""size"" => ""8712"";;""mtime"" => ""1636744314"";;""mode"" => ""420"";;""checksum"" => ""ba53c0c8dc893dd3021f07b1df3e90bd"");;""ado.net/v3.5/Sap.Data.Hana.v3.5.pdb"" => HASH(""checksum"" => ""a524d68519003fc3ebe66d5cdedeb809"";;""mode"" => ""420"";;""mtime"" => ""1636744313"";;""size"" => ""484864"";;""dbg"" => ""1""));;""requires"" => ARRAY(HASH(""str"" => ""manifest"";;""id"" => ""manifest""));;""debugArchive"" => ""ADONET.DEBUG.TGZ"";;""desc"" => ""ADO.NET Provider"";;""size"" => ""34272884"";;""buildstring"" => ""2.11.14.1636568807"";;""valid"" => ""1"");;""jdbc"" => HASH(""buildstring"" => ""2.11.14.1636568807"";;""size"" => ""1272386"";;""valid"" => ""1"";;""name"" => ""JDBC"";;""isClientPackage"" => ""1"";;""git_hash"" => ""2708a618ba5d44937cca75de0ea8c41a396838bd"";;""script"" => ""use strict\;

our $listname = 'hdbclient.lst'\;

sub getExternalFileListName{
    return $listname\;
}

1\;
"";;""type"" => undef;;""modtime"" => ""1673098854"";;""checksum"" => ""361871f163e944474cd75c1e5591664d"";;""version"" => ""2.11.14.1636568807"";;""requires"" => ARRAY(HASH(""str"" => ""manifest"";;""id"" => ""manifest""));;""files"" => HASH(""ngdbc.jar"" => HASH(""mtime"" => ""1636744295"";;""mode"" => ""420"";;""checksum"" => ""a7de0c95e441edae26d9bdfbf735fa57"";;""size"" => ""1272386""));;""debugArchive"" => undef;;""desc"" => ""JDBC Driver"");;""halmclient"" => HASH(""valid"" => ""1"";;""buildstring"" => ""2.11.14.1636568807"";;""size"" => ""516796"";;""desc"" => ""HALM Client"";;""debugArchive"" => undef;;""files"" => HASH(""hdbalm.bat"" => HASH(""checksum"" => ""f29ff42c00e21bc0afd29c72e3b1979e"";;""mode"" => ""493"";;""mtime"" => ""1636744161"";;""size"" => ""1634"");;""hdbalm.py"" => HASH(""mtime"" => ""1636744161"";;""mode"" => ""420"";;""checksum"" => ""e9b8b9611df224299f5a06a9b54f87bb"";;""size"" => ""258190"");;""hdbalm3.py"" => HASH(""size"" => ""256972"";;""mtime"" => ""1636744161"";;""mode"" => ""420"";;""checksum"" => ""3560322ab1d36e786fcd1de68c85dedf""));;""requires"" => ARRAY(HASH(""id"" => ""manifest"";;""str"" => ""manifest""));;""version"" => ""2.11.14.1636568807"";;""checksum"" => ""db54d70cc3b48485b34879b378f1ae98"";;""modtime"" => ""1673098855"";;""type"" => undef;;""script"" => ""1\;
"";;""isClientPackage"" => ""1"";;""git_hash"" => ""2708a618ba5d44937cca75de0ea8c41a396838bd"";;""name"" => ""HALM Client"");;""dotnetcore"" => HASH(""valid"" => ""1"";;""size"" => ""31536805"";;""buildstring"" => ""2.11.14.1636568807"";;""requires"" => ARRAY(HASH(""str"" => ""manifest"";;""id"" => ""manifest""));;""files"" => HASH(""dotnetcore/libadonetHDB.dll"" => HASH(""mode"" => ""292"";;""checksum"" => ""e325668d6e8e90b7a7e3302a82b28820"";;""mtime"" => ""1636744656"";;""size"" => ""8538232"");;""dotnetcore/v2.1/Sap.Data.Hana.Core.v2.1.deps.json"" => HASH(""size"" => ""509"";;""mtime"" => ""1636744688"";;""mode"" => ""420"";;""checksum"" => ""39c515e78f8df17e6f6ad87ed80f92fe"");;""dotnetcore/v2.1/Sap.Data.Hana.Core.v2.1.dll"" => HASH(""checksum"" => ""892c57af7643c677b9308bbefd3cbb53"";;""mode"" => ""292"";;""mtime"" => ""1636744690"";;""size"" => ""271480"");;""dotnetcore/v2.1/Sap.Data.Hana.Core.v2.1.pdb"" => HASH(""checksum"" => ""464ff8e974881b172194c3a30e6474d4"";;""mode"" => ""420"";;""mtime"" => ""1636744688"";;""size"" => ""126272"";;""dbg"" => ""1"");;""dotnetcore/libadonetHDB32.pdb"" => HASH(""size"" => ""6933504"";;""dbg"" => ""1"";;""mode"" => ""420"";;""checksum"" => ""31fbaaa697928cce234465ea799683e6"";;""mtime"" => ""1636744456"");;""dotnetcore/libadonetHDB32.dll"" => HASH(""checksum"" => ""125f67faccb9a3b14ea8b6996879e546"";;""mode"" => ""292"";;""mtime"" => ""1636744459"";;""size"" => ""7914104"");;""dotnetcore/libadonetHDB.pdb"" => HASH(""size"" => ""7752704"";;""dbg"" => ""1"";;""checksum"" => ""2645cb385350a790ac9d9198b5b8eebd"";;""mode"" => ""420"";;""mtime"" => ""1636744652""));;""debugArchive"" => ""DOTNETCORE.DEBUG.TGZ"";;""desc"" => "".NET Core 2.1 Provider"";;""type"" => undef;;""modtime"" => ""1673098870"";;""checksum"" => ""d9542bf02458dd63005dae4a7a861af6"";;""version"" => ""2.11.14.1636568807"";;""script"" => ""use SDB::Install::SysVars\;
use SDB::Install::System qw \(isAdmin exec_program\)\;
use SDB::Install::System::EnvVariable\;

use strict\;

my $envvar = 'HDBDOTNETCORE'\;

sub Register {
    if \(!$isWin\) {
        return 1\;
    }
    my \($self\) = @_\;
    my $path = $self->getPath \(\) . $path_separator . \"dotnetcore\"\;
    my $var = new SDB::Install::System::EnvVariable \($envvar, $path\)\;
    my $errlst = new SDB::Install::MsgLst \(\)\;
    my $msg = $self->AddMessage \(\"Setting \" . $envvar . \" environment variable to path: \" . $path\)\;
    $var->{EnvVarValue} = $path\;
    $var->{EnvVarType} = 'USER'\;
    if \(isAdmin \(\)\) {
        $var->{EnvVarType} = 'SYSTEM'\;
    }
    if \(!defined $var->set \(\)\) {
        $self->AddError \(\"Failed to set \" . $envvar, $errlst\)\;
    }
    $self->AddSubMsgLst \($msg, $var\)\;
}

sub Unregister {
    if \(!$isWin\) {
        return 1\;
    }
    my \($self\) = @_\;
    my $path = $self->getPath \(\) . $path_separator . \"dotnetcore\"\;
    my $var = new SDB::Install::System::EnvVariable \($envvar, $path\)\;
    my $errlst = new SDB::Install::MsgLst \(\)\;
    my $msg = $self->AddMessage \(\"Removing \" . $envvar . \" environment variable\"\)\;
    $var->{EnvVarExtend} = 'No'\;
    $var->{EnvVarType} = 'USER'\;
    if \(isAdmin \(\)\) {
        $var->{EnvVarType} = 'SYSTEM'\;
    }
    if \(!defined $var->unset \(\)\) {
        $self->AddError \(\"Failed to remove \" . $envvar, $errlst\)\;
    }
    $self->AddSubMsgLst \($msg, $var\)\;
}

1\;
"";;""name"" => "".NET Core"";;""git_hash"" => ""2708a618ba5d44937cca75de0ea8c41a396838bd"";;""isClientPackage"" => ""1"");;""golang"" => HASH(""script"" => ""use SDB::Install::SysVars\;
use SDB::Install::System qw \(exec_program\)\;

use strict\;

1\;
"";;""git_hash"" => ""2708a618ba5d44937cca75de0ea8c41a396838bd"";;""isClientPackage"" => ""1"";;""name"" => ""golang Client"";;""debugArchive"" => undef;;""desc"" => ""golang DBCAPI Client Interface"";;""files"" => HASH(""golang/src/SAP/go-hdb/driver/includes/DBCAPI.h"" => HASH(""mtime"" => ""1636744626"";;""checksum"" => ""814ca2a9789ea01add843ca5c5089b05"";;""mode"" => ""420"";;""size"" => ""60483"");;""golang/src/SAP/go-hdb/driver/driver.go"" => HASH(""mode"" => ""420"";;""checksum"" => ""c9788e71008d1f610b234d2bef3ef4ed"";;""mtime"" => ""1636744626"";;""size"" => ""61997"");;""golang/src/SAP/go-hdb/driver/includes/DBCAPI_DLL.h"" => HASH(""size"" => ""20611"";;""mtime"" => ""1636744626"";;""checksum"" => ""3b0a53c72721054ef89bec4690b4c213"";;""mode"" => ""420"");;""golang/src/SAP/go-hdb/driver/dsn.go"" => HASH(""mtime"" => ""1636744626"";;""checksum"" => ""ba830ae78b6e9ef6787d019a54b4126c"";;""mode"" => ""420"";;""size"" => ""1842""));;""requires"" => ARRAY(HASH(""id"" => ""manifest"";;""str"" => ""manifest"");;HASH(""id"" => ""dbcapi"";;""str"" => ""dbcapi""));;""version"" => ""2.11.14.1636568807"";;""checksum"" => ""d7454b881c9363ea4fc5c43aa92238a0"";;""modtime"" => ""1673098857"";;""type"" => undef;;""buildstring"" => ""2.11.14.1636568807"";;""size"" => ""144933"";;""valid"" => ""1"");;""odbc"" => HASH(""valid"" => ""1"";;""size"" => ""19031351"";;""buildstring"" => ""2.11.14.1636568807"";;""type"" => undef;;""modtime"" => ""1673098854"";;""checksum"" => ""1c7cb74756808e3c41efd2ef2c19bbf5"";;""version"" => ""2.11.14.1636568807"";;""requires"" => ARRAY(HASH(""id"" => ""manifest"";;""str"" => ""manifest""));;""files"" => HASH(""sdk/odbc/incl/sql.h"" => HASH(""size"" => ""34631"";;""checksum"" => ""60904ad7a4ba7a5d0664a380522a4475"";;""mode"" => ""420"";;""mtime"" => ""1636744295"");;""hdbodbc_cons.exe"" => HASH(""size"" => ""1409144"";;""mtime"" => ""1636744653"";;""checksum"" => ""0bb60ae73ec7ce8b6a96ba8129011fc0"";;""mode"" => ""365"");;""sdk/odbc/incl/sqlsdbodbc.h"" => HASH(""size"" => ""11130"";;""mode"" => ""420"";;""checksum"" => ""84a1231e1517563258fc186e998f2a24"";;""mtime"" => ""1636744295"");;""sdk/odbc/incl/sqlext.h"" => HASH(""size"" => ""90590"";;""mtime"" => ""1636744295"";;""mode"" => ""420"";;""checksum"" => ""858358a83dce2d4b6807bdd29ef1202d"");;""libodbcHDB.lib"" => HASH(""size"" => ""211148"";;""checksum"" => ""f0b6a50ab84da5fa10c6a9ffbee7a371"";;""mode"" => ""420"";;""mtime"" => ""1636744628"");;""sdk/odbc/incl/sqltypes.h"" => HASH(""mtime"" => ""1636744295"";;""mode"" => ""420"";;""checksum"" => ""df446f53faeee393ed2a29dc1410495b"";;""size"" => ""10240"");;""sdk/odbc/incl/sqlucode.h"" => HASH(""size"" => ""41060"";;""mtime"" => ""1636744295"";;""mode"" => ""420"";;""checksum"" => ""78d5f31629278ca12bfe6b2e1337fd56"");;""libodbcHDB.dll"" => HASH(""mtime"" => ""1636744633"";;""mode"" => ""292"";;""checksum"" => ""ea762938f376f4591358d8c6d352b35d"";;""size"" => ""9078392"");;""odbcreg.exe"" => HASH(""size"" => ""97400"";;""mtime"" => ""1636744612"";;""checksum"" => ""03f357c2315fe8386eba4bdeb74d476d"";;""mode"" => ""365"");;""libodbcHDB.pdb"" => HASH(""dbg"" => ""1"";;""size"" => ""8047616"";;""mtime"" => ""1636744630"";;""mode"" => ""420"";;""checksum"" => ""7f964e0290d907f70756722769b0f197""));;""desc"" => ""ODBC Driver"";;""debugArchive"" => ""ODBC.DEBUG.TGZ"";;""name"" => ""ODBC"";;""git_hash"" => ""2708a618ba5d44937cca75de0ea8c41a396838bd"";;""isClientPackage"" => ""1"";;""script"" => ""use SDB::Install::SysVars\;
use SDB::Install::DebugUtilities\;
use SDB::Install::System qw \(
    exec_program
\)\;
use SDB::Install::System::Registration::ODBC\;



sub Register{
    my \($self\) = @_\;
    if \($isWin\){
        my $inst              = $self->{'installation'}\;
        my $conf              = $inst->getConfiguration\(\)\;
        my $driverName        = $conf->{'params'}->{'ODBCDriverName'}->{'value'}\;
        my $path              = $self->getPath \(\)\;
        my $odbcreg           = $path . $path_separator . 'odbcreg.exe'\;
        my $dll               = 'libodbcHDB.dll'\;
        if\(! -f $odbcreg\) {
            $odbcreg = $path . $path_separator . 'odbcreg32.exe'\;
            $dll = 'libodbcHDB32.dll'\;
        }
        if\(not $self->IsUpdate\(\)\) {
            # we only do registration when we are a new install, not a sw update.
    		my $msg = $self->AddMessage \(\"Registering ODBC driver as \\"$driverName\\".\"\)\;
    		my $cfg =  {}\;
    		my $rc = exec_program \($odbcreg, ['-i', $driverName, '-p',$path, '-d', $dll],$cfg\)\;
    		if \(!defined $rc || $rc != 0\){
    			$self->AddError \(\"Could not register ODBC driver \\"$driverName\\"\", $cfg\)\;
    			$self->AddSubMsgLst \($msg, $cfg\)\;
    			return undef\;
    		}
    		$self->AddSubMsgLst \($msg, $cfg\)\;
        }
        else {
            # when we are a sw update, we give a warning when we
            # could not find a registration of our driver in the registry.
            # Note that registrations may have been deleted intentionally,
            # e.g. for security reasons.
            my $odbcObj = new SDB::Install::System::Registration::ODBC\(\)\;
            my $myNames  = $odbcObj->getDriverNamesAssignedToInstallation\($inst\)\;
            if\( \(not defined $myNames\) || scalar\(@{$myNames}\) <= 0\) {
                $self->AddWarning\(\"ODBC Driver \\"\".$path.$path_separator.$dll.\"\\" is not registered.\"\)\;
                $self->AddWarning\(\"If this is not intentional, registration could be done as follows:\"\)\;
                $self->AddWarning\(\"\\"$odbcreg\\" -i <driverName> -p \\"$path\\" -d $dll\"\)\;
            }
        }
	}
	return 1\;
}

#----------------------------------------------------------------------------

sub Unregister{
	my \(
	   $self
    \) = @_\;
	if \($isWin\){
        my $inst        = $self->{'installation'}\;
        my $conf        = $inst->getConfiguration\(\)\;
		my $path        = $self->getPath\(\)\;
		my $odbcreg     = $path . $path_separator . 'odbcreg.exe'\;
        if \(! -f $odbcreg\){
            $odbcreg = $path . $path_separator . 'odbcreg32.exe'\;
        }
        my $odbcObj = new SDB::Install::System::Registration::ODBC\(\)\;
        my $myNames  = $odbcObj->getDriverNamesAssignedToInstallation\($inst\)\;
        if\(defined $myNames\) {
            foreach my $driverName \(@$myNames\) {
        		my $msg = $self->AddMessage \(\"Unregistering ODBC driver \\"$driverName\\".\"\)\;
        		my $cfg =  {}\;
        		my $rc = exec_program\($odbcreg, ['-r', $driverName], $cfg\)\;
        		if \(!defined $rc || $rc != 0\){
        			$self->AddError\(\"Could not unregister ODBC driver \\"$driverName\\".\", $cfg\)\;
        			$self->AddSubMsgLst\($msg, $cfg\)\;
        			return undef\;
        		}
        		$self->AddSubMsgLst\($msg, $cfg\)\;
            }
        }
	}
	return 1\;
}

#----------------------------------------------------------------------------

sub Postinstall\(\) {
        my \(
            $self
        \) = @_\;
        my $path = $self->getPath\(\)\;
        my $exeExt = $isWin ? '.exe' : ''\;
        my $odbcCons = $path.$path_separator.'hdbodbc_cons'.$exeExt\;
        if\(! -f $odbcCons\) {
            $odbcCons = $path.$path_separator.'hdbodbc_cons32'.$exeExt\;
        }
        if\(-f $odbcCons\) {
            $self->AddMessage\(\"Running $odbcCons to detect and remove invalid shared memory.\"\)\;
            my $rc = exec_program\($odbcCons, ['-w', '256']\)\;
            if\(defined $rc\) {
                $self->AddMessage\(\"$odbcCons returned $rc.\"\)\;
            }
        }
        return 1\;
}


1\;
"");;""calcview"" => HASH(""script"" => ""use SDB::Install::SysVars\;
use SDB::Install::System qw \(exec_program\)\;

use strict\;

1\;
"";;""git_hash"" => ""2708a618ba5d44937cca75de0ea8c41a396838bd"";;""isClientPackage"" => ""1"";;""name"" => ""Calculation View API"";;""desc"" => ""Calculation View API"";;""debugArchive"" => undef;;""files"" => HASH(""calcviewapi/HANACalculationViewAPI-Cloud-1.5.3-javadoc.jar"" => HASH(""mtime"" => ""1636744203"";;""checksum"" => ""e3baab0e187911f666049ffd8fd3a74d"";;""mode"" => ""292"";;""size"" => ""2220431"");;""calcviewapi/HANACalculationViewAPI-Cloud-1.5.3.jar"" => HASH(""mtime"" => ""1636744203"";;""mode"" => ""292"";;""checksum"" => ""a177f62f40a6424319670a8a5fd01aa5"";;""size"" => ""674711"");;""calcviewapi/HANACalculationViewAPI-OnPrem-1.5.3-javadoc.jar"" => HASH(""size"" => ""2377340"";;""checksum"" => ""2b8b0cc7ba0ffe724171c5f5521021f6"";;""mode"" => ""292"";;""mtime"" => ""1636744203"");;""calcviewapi/HANACalculationViewAPI-OnPrem-1.5.3.jar"" => HASH(""size"" => ""718335"";;""checksum"" => ""bf7d30184980cad2084072730f57b504"";;""mode"" => ""292"";;""mtime"" => ""1636744203""));;""version"" => ""2.11.14.1636568807"";;""modtime"" => ""1673098874"";;""type"" => undef;;""checksum"" => ""496993ff1dfd40eb5757a9dc4e346a9a"";;""size"" => ""5990817"";;""buildstring"" => ""2.11.14.1636568807"";;""valid"" => ""1"");;""nodejs"" => HASH(""valid"" => ""1"";;""buildstring"" => ""2.11.14.1636568807"";;""size"" => ""9574835"";;""requires"" => ARRAY(HASH(""str"" => ""manifest"";;""id"" => ""manifest"");;HASH(""id"" => ""dbcapi"";;""str"" => ""dbcapi""));;""files"" => HASH(""node/prebuilt/ntamd64-msvc2010/libdbcapiHDB.dll"" => HASH(""checksum"" => ""45204cf847ae747443550f14ceed881a"";;""mode"" => ""292"";;""mtime"" => ""1636744619"";;""size"" => ""8520824"");;""node/extension/TypeCode.js"" => HASH(""size"" => ""1361"";;""mode"" => ""420"";;""checksum"" => ""54044283a192e692b276865a3a8a9def"";;""mtime"" => ""1636744620"");;""node/extension/FunctionCode.js"" => HASH(""size"" => ""587"";;""mtime"" => ""1636744620"";;""mode"" => ""420"";;""checksum"" => ""3d6bf409100d0d968a13cb02a3e5d682"");;""node/prebuilt/ntamd64-msvc2010/hana-client.node"" => HASH(""size"" => ""993912"";;""mtime"" => ""1636744532"";;""mode"" => ""292"";;""checksum"" => ""ff682ea4aa6d6f21bb3de59a66e72606"");;""node/extension/Stream.js"" => HASH(""mode"" => ""420"";;""checksum"" => ""a43ef7c8e0ec7ed663dd6c8306865268"";;""mtime"" => ""1636744620"";;""size"" => ""23078"");;""node/lib/index.js"" => HASH(""mtime"" => ""1636744620"";;""mode"" => ""420"";;""checksum"" => ""c96c5e632be40943b711941a3ac1c8dd"";;""size"" => ""26699"");;""node/checkbuild.js"" => HASH(""mtime"" => ""1636744620"";;""mode"" => ""420"";;""checksum"" => ""350f9c84d69791ae7fe899a0dd6cb004"";;""size"" => ""598"");;""node/README.md"" => HASH(""size"" => ""6051"";;""mtime"" => ""1636744620"";;""mode"" => ""420"";;""checksum"" => ""3507fb5d1695abcb19ef04ef5b60a758"");;""node/package.json"" => HASH(""mtime"" => ""1636744619"";;""checksum"" => ""37f5c76fb6a348d2827f8120cd34de22"";;""mode"" => ""420"";;""size"" => ""545"");;""node/extension/Enums.js"" => HASH(""size"" => ""1180"";;""mode"" => ""420"";;""checksum"" => ""dba5eaa38e2c5d0f909fb9ebae14ec2b"";;""mtime"" => ""1636744620""));;""debugArchive"" => undef;;""desc"" => ""node.js DBCAPI Client Interface"";;""type"" => undef;;""modtime"" => ""1673098857"";;""checksum"" => ""8d7bddf4e5fbc7ca6100977e447dee0a"";;""version"" => ""2.11.14.1636568807"";;""script"" => ""use SDB::Install::SysVars\;
use SDB::Install::System qw \(exec_program\)\;

use strict\;

1\;
"";;""name"" => ""node.js Client"";;""git_hash"" => ""2708a618ba5d44937cca75de0ea8c41a396838bd"";;""isClientPackage"" => ""1"");;""manifest"" => HASH(""valid"" => ""1"";;""buildstring"" => ""2.11.14.1636568807"";;""size"" => ""1163"";;""version"" => ""2.11.14.1636568807"";;""modtime"" => ""1673098846"";;""type"" => undef;;""checksum"" => ""bac32163eb35ea6d4e832eac7f77fb99"";;""desc"" => ""Product Manifest"";;""debugArchive"" => undef;;""files"" => HASH(""manifest"" => HASH(""size"" => ""1163"";;""mtime"" => ""1636744598"";;""checksum"" => ""aa416b92e74c139ad4ebf3571b9ded20"";;""mode"" => ""420""));;""isClientPackage"" => ""1"";;""git_hash"" => ""2708a618ba5d44937cca75de0ea8c41a396838bd"";;""name"" => ""Product Manifest"";;""script"" => ""sub Postinstall{
    # load/refresh manifest
    $_[0]->{installation}->getManifest \(1\)\;
}

1\;
"");;""pydbapi"" => HASH(""version"" => ""2.11.14.1636568807"";;""modtime"" => ""1673098852"";;""type"" => undef;;""checksum"" => ""8f3a83fd194332e23c637e2ead38236e"";;""desc"" => ""Python DB API"";;""debugArchive"" => undef;;""requires"" => ARRAY(HASH(""id"" => ""manifest"";;""str"" => ""manifest""));;""files"" => HASH(""hdbcli-2.11.14.zip"" => HASH(""size"" => ""10388752"";;""mtime"" => ""1636744658"";;""mode"" => ""420"";;""checksum"" => ""f3fc85b674be6d1b3d906b1c2f3dd40e""));;""isClientPackage"" => ""1"";;""git_hash"" => ""2708a618ba5d44937cca75de0ea8c41a396838bd"";;""name"" => ""Python DB API"";;""script"" => ""1\;

"";;""valid"" => ""1"";;""buildstring"" => ""2.11.14.1636568807"";;""size"" => ""10388752"");;""commoncryptolib"" => HASH(""name"" => ""CommonCryptoLib"";;""isClientPackage"" => ""1"";;""git_hash"" => ""2708a618ba5d44937cca75de0ea8c41a396838bd"";;""script"" => ""use SDB::Install::SysVars\;
use SDB::Install::System qw \(exec_program\)\;

use strict\;

1\;
"";;""type"" => undef;;""modtime"" => ""1673098858"";;""checksum"" => ""34a77ab5511d7455242ef1ea29e04a0a"";;""version"" => ""2.11.14.1636568807"";;""requires"" => ARRAY(HASH(""str"" => ""manifest"";;""id"" => ""manifest""));;""files"" => HASH(""sapgenpse.exe"" => HASH(""checksum"" => ""fa540e6c17c611ddeb62b3bd20dc563e"";;""mode"" => ""365"";;""mtime"" => ""1636744209"";;""size"" => ""166400"");;""sapcrypto.dll"" => HASH(""mtime"" => ""1636744209"";;""mode"" => ""292"";;""checksum"" => ""710dd8e4641564b2611b4ea481da7037"";;""size"" => ""5166592""));;""debugArchive"" => undef;;""desc"" => ""SAP CommonCryptoLib"";;""size"" => ""5332992"";;""buildstring"" => ""2.11.14.1636568807"";;""valid"" => ""1"");;""mlapi"" => HASH(""size"" => ""2992683"";;""buildstring"" => ""2.11.14.1636568807"";;""valid"" => ""1"";;""script"" => ""1\;

"";;""name"" => ""Python Machine Learning Client"";;""isClientPackage"" => ""1"";;""git_hash"" => ""2708a618ba5d44937cca75de0ea8c41a396838bd"";;""files"" => HASH(""hana_ml-2.11.21121102.tar.gz"" => HASH(""checksum"" => ""993819c110e5fc299a73e2d403ea48e5"";;""mode"" => ""292"";;""mtime"" => ""1636744249"";;""size"" => ""2992683""));;""requires"" => ARRAY(HASH(""str"" => ""manifest"";;""id"" => ""manifest"");;HASH(""id"" => ""pydbapi"";;""str"" => ""pydbapi""));;""debugArchive"" => undef;;""desc"" => ""Python Machine Learning Client for SAP HANA"";;""checksum"" => ""a051bd9abcea11388656583eabb5100e"";;""type"" => undef;;""modtime"" => ""1673098852"";;""version"" => ""2.11.14.1636568807"");;""envscript"" => HASH(""debugArchive"" => undef;;""desc"" => ""Environment Script"";;""files"" => HASH(""hdbclienv.bat"" => HASH(""size"" => ""1610"";;""mtime"" => ""1636744294"";;""checksum"" => ""38e60c12a103602cc5fbfe1bb3bd6ec6"";;""mode"" => ""493""));;""version"" => ""2.11.14.1636568807"";;""modtime"" => ""1673098871"";;""type"" => undef;;""checksum"" => ""ad18f23c1c669ede21b2542fcebe677e"";;""script"" => ""use File::Spec\;
use SDB::Install::SysVars\;
use SDB::Install::System qw \(isAdmin exec_program\)\;
use SDB::Install::System::EnvVariable\;

sub Register\(\) {
    if \(!$isWin\) {
        return 1\;
    }
    my \($self\) = @_\;
    my $path = $self->getPath \(\)\;

    if \(defined $ENV{HDB_INSTALL_NOPATH}\) {
        $self->AddMessage \(\"HDB_INSTALL_NOPATH is set, skipping setting PATH\"\)\;
        return 1\;
    }
    if \(index\($path, '\\usr\\sap'\) != -1\) {
        $self->AddMessage \(\"\\usr\\sap appears in path, skipping setting PATH\"\)\;
        return 1\;
    }
    my $var = new SDB::Install::System::EnvVariable \(\"PATH\", $path\)\;
    my $errlst = new SDB::Install::MsgLst \(\)\;
    $var->{EnvVarValue} = $path\;
    $var->{EnvVarExtend} = 'Prefix'\;
    $var->{EnvVarSeparator} = '\;'\;
    $var->{EnvVarType} = 'USER'\;
    if \(isAdmin \(\)\) {
        $var->{EnvVarType} = 'SYSTEM'\;
    }
    my $msg = $self->AddMessage \(\"Adding to \" . $var->{EnvVarType} . \" PATH: $path\"\)\;
    if \(!defined $var->set \(\)\) {
        $self->AddError \(\"Failed to set \" . $envvar, $errlst\)\;
    }
    $self->AddSubMsgLst \($msg, $var\)\;
    return 1\;
}

sub Unregister {
    if \(!$isWin\) {
        return 1\;
    }
    if \(defined $ENV{HDB_INSTALL_NOPATH}\) {
        $self->AddMessage \(\"HDB_INSTALL_NOPATH is set, skipping removing PATH\"\)\;
        return 1\;
    }
    if \(index\($path, '\\usr\\sap'\) != -1\) {
        $self->AddMessage \(\"\\usr\\sap appears in path, skipping removing PATH\"\)\;
        return 1\;
    }
    my \($self\) = @_\;
    my $path = $self->getPath \(\)\;
    my $var = new SDB::Install::System::EnvVariable \(\"PATH\", $path\)\;
    my $errlst = new SDB::Install::MsgLst \(\)\;
    $var->{EnvVarValue} = $path\;
    $var->{EnvVarExtend} = 'Prefix'\;
    $var->{EnvVarSeparator} = '\;'\;
    $var->{EnvVarType} = 'USER'\;
    if \(isAdmin \(\)\) {
        $var->{EnvVarType} = 'SYSTEM'\;
    }
    my $msg = $self->AddMessage \(\"Removing from \" . $var->{EnvVarType} . \" PATH: $path\"\)\;
    if \(!defined $var->unset \(\)\) {
        $self->AddError \(\"Failed to remove from PATH: \", $errlst\)\;
    }
    $self->AddSubMsgLst \($msg, $var\)\;
    return 1\;
}


sub Postinstall\(\) {
    my \(
        $self
    \) = @_\;
    if \($^O ne 'MSWin32'\)
    {
        my $path = $self->getPath\(\)\;
        my $scriptname = File::Spec->catfile\( $path, 'hdbclienv.sh' \)\;
        open\(FH, \"<\".$scriptname\) || die \"Can't open hdbclienv.sh for reading\"\;
        my @contents = <FH>\;
        close\(FH\)\;
        my @replaced\;
        foreach\(@contents\) {
            $_ =~ s/\@REPLACE_INSTALL_PATH\@/$path/g\;
            push\(@replaced, $_\)\;
        }
        open\(FH, \">\".$scriptname\) || die \"Can't open hdbclienv.sh for writing\"\;
        print FH @replaced\;
        close\(FH\)\;
    }
    return 1\;
}

1\;

"";;""git_hash"" => ""2708a618ba5d44937cca75de0ea8c41a396838bd"";;""isClientPackage"" => ""1"";;""name"" => ""Environment Script"";;""valid"" => ""1"";;""buildstring"" => ""2.11.14.1636568807"";;""size"" => ""1610"");;""examples"" => HASH(""size"" => ""627036"";;""buildstring"" => ""2.11.14.1636568807"";;""valid"" => ""1"";;""script"" => ""use SDB::Install::SysVars\;
use SDB::Install::System qw \(exec_program\)\;

use strict\;

1\;
"";;""name"" => ""Code Examples"";;""isClientPackage"" => ""1"";;""git_hash"" => ""2708a618ba5d44937cca75de0ea8c41a396838bd"";;""files"" => HASH(""examples/ado.net/TableEditor/App.ico"" => HASH(""mtime"" => ""1636744295"";;""checksum"" => ""a78a91ff7a8c59192edc05466a68bee5"";;""mode"" => ""420"";;""size"" => ""1078"");;""examples/ado.net/SyncViewer/Form1.cs"" => HASH(""mtime"" => ""1636744295"";;""mode"" => ""420"";;""checksum"" => ""550f3f92401e779742cff5d03070ab2d"";;""size"" => ""1153"");;""examples/ado.net/SyncViewer/Settings.cs"" => HASH(""size"" => ""1246"";;""mtime"" => ""1636744295"";;""mode"" => ""420"";;""checksum"" => ""1866616309f16ceffccea747559eccf4"");;""examples/ado.net/SyncViewer/Settings.Designer.cs"" => HASH(""mtime"" => ""1636744295"";;""mode"" => ""420"";;""checksum"" => ""9daf87753fbbff7373373353a92cfd9c"";;""size"" => ""1642"");;""examples/ado.net/DemoSetup/mkdemo.sql"" => HASH(""size"" => ""226484"";;""mtime"" => ""1636744295"";;""checksum"" => ""54e5baa0e339b936890bfef5c839c01c"";;""mode"" => ""420"");;""examples/ado.net/DemoSetup/PlasticVisor.jpg"" => HASH(""size"" => ""2516"";;""checksum"" => ""aac9a4be8f40f7d556971e93c3c50547"";;""mode"" => ""420"";;""mtime"" => ""1636744295"");;""examples/ado.net/DemoSetup/DemoSetup.resx"" => HASH(""mode"" => ""420"";;""checksum"" => ""fc75f378d77f29ee452970be2bf081e1"";;""mtime"" => ""1636744295"";;""size"" => ""5817"");;""examples/ado.net/SyncViewer/Resources.Designer.cs"" => HASH(""size"" => ""2827"";;""mode"" => ""420"";;""checksum"" => ""a8f2a8e218ba9c76a4e378907407c295"";;""mtime"" => ""1636744295"");;""examples/ado.net/TableEditor/TableEditor.csproj"" => HASH(""mtime"" => ""1636744295"";;""checksum"" => ""b783809af9da29e70c2650344a5d1119"";;""mode"" => ""420"";;""size"" => ""5289"");;""examples/ado.net/TableViewer/App.ico"" => HASH(""size"" => ""1078"";;""mtime"" => ""1636744295"";;""mode"" => ""420"";;""checksum"" => ""a78a91ff7a8c59192edc05466a68bee5"");;""examples/ado.net/SyncViewer/DataSet1.xsd"" => HASH(""size"" => ""20374"";;""mtime"" => ""1636744295"";;""checksum"" => ""e3f9971a5c71602d46eca6fbfb0fdbc3"";;""mode"" => ""420"");;""examples/ado.net/TableViewer/TableViewer.resx"" => HASH(""mtime"" => ""1636744295"";;""checksum"" => ""32a9f8db6987c2d0d6bb55fc487be5e8"";;""mode"" => ""420"";;""size"" => ""5814"");;""examples/ado.net/TableViewer/TableViewer.cs"" => HASH(""checksum"" => ""55721f7b59c83c559d2e6cc2ea922d80"";;""mode"" => ""420"";;""mtime"" => ""1636744295"";;""size"" => ""9733"");;""examples/ado.net/DemoSetup/undemo.sql"" => HASH(""size"" => ""1115"";;""mtime"" => ""1636744295"";;""checksum"" => ""a113e5cb6792d8eb7e57fcc7f14346c1"";;""mode"" => ""420"");;""examples/ado.net/DemoSetup/V-Neck.jpg"" => HASH(""mtime"" => ""1636744295"";;""mode"" => ""420"";;""checksum"" => ""e510aa3d0518e6853b50e95e02bca7c9"";;""size"" => ""2790"");;""examples/ado.net/SyncViewer/Settings.settings"" => HASH(""mode"" => ""420"";;""checksum"" => ""83eca9aa5c70365865b735aac9ae3367"";;""mtime"" => ""1636744295"";;""size"" => ""880"");;""examples/ado.net/DemoSetup/DemoSetup.sln"" => HASH(""size"" => ""902"";;""mtime"" => ""1636744295"";;""checksum"" => ""5b44698dec647019080c1a94479e3cae"";;""mode"" => ""420"");;""examples/ado.net/SyncViewer/Form1.Designer.cs"" => HASH(""size"" => ""24674"";;""mtime"" => ""1636744295"";;""checksum"" => ""91b3712c98d601898687b7a39176f87a"";;""mode"" => ""420"");;""examples/ado.net/DemoSetup/CrewNeck.jpg"" => HASH(""mode"" => ""420"";;""checksum"" => ""9936c8d67d86e19023b85c3e54b171c8"";;""mtime"" => ""1636744295"";;""size"" => ""8065"");;""examples/dotnetcore/Example1/Example1.csproj"" => HASH(""size"" => ""518"";;""checksum"" => ""1ff92811ac8de45ef989235e25180446"";;""mode"" => ""420"";;""mtime"" => ""1636744295"");;""examples/ado.net/DemoSetup/readme.txt"" => HASH(""mode"" => ""420"";;""checksum"" => ""2dc2c47125a1c3462d77fb0713a8e8f7"";;""mtime"" => ""1636744295"";;""size"" => ""836"");;""examples/ado.net/DemoSetup/CottonShorts.jpg"" => HASH(""size"" => ""6375"";;""checksum"" => ""a3849fcd9dfe1475892d38a907bbfc61"";;""mode"" => ""420"";;""mtime"" => ""1636744295"");;""examples/golang/src/statement/statement_examples.go"" => HASH(""mtime"" => ""1636744616"";;""mode"" => ""420"";;""checksum"" => ""70426c2e9e08f76248a8837f150f127c"";;""size"" => ""9522"");;""examples/dotnetcore/Example1/Program.cs"" => HASH(""mode"" => ""420"";;""checksum"" => ""893be7810b447f2682be60a57001f5f6"";;""mtime"" => ""1636744295"";;""size"" => ""2717"");;""examples/ado.net/TableEditor/AssemblyInfo.cs"" => HASH(""size"" => ""2426"";;""mtime"" => ""1636744295"";;""checksum"" => ""30f13277ea8f426f9c2b8d3beee26096"";;""mode"" => ""420"");;""examples/ado.net/SyncViewer/SyncViewer.csproj"" => HASH(""mtime"" => ""1636744295"";;""checksum"" => ""afed3246991eb8416b4a6a426392fcc1"";;""mode"" => ""420"";;""size"" => ""4761"");;""examples/golang/src/transactions/transaction_examples.go"" => HASH(""size"" => ""4160"";;""checksum"" => ""5f20609284f7be14142a79e19c8e9dc2"";;""mode"" => ""420"";;""mtime"" => ""1636744616"");;""examples/ado.net/readme.txt"" => HASH(""size"" => ""2001"";;""checksum"" => ""30f2743b55ac125854af132f0c71633c"";;""mode"" => ""420"";;""mtime"" => ""1636744295"");;""examples/ado.net/TableEditor/TableEditor.sln"" => HASH(""mtime"" => ""1636744295"";;""mode"" => ""420"";;""checksum"" => ""e440b1fafc0f659bfbc87754036d0630"";;""size"" => ""906"");;""examples/node/app1.js"" => HASH(""mtime"" => ""1636744620"";;""checksum"" => ""3bc86022c25d577037b20b1a16af8937"";;""mode"" => ""420"";;""size"" => ""4802"");;""examples/ado.net/TableViewer/TableViewer.sln"" => HASH(""mode"" => ""420"";;""checksum"" => ""64097eb3941a777cc67a3b594ee9cfe0"";;""mtime"" => ""1636744295"";;""size"" => ""906"");;""examples/ado.net/DemoSetup/CottonCap.jpg"" => HASH(""size"" => ""8577"";;""checksum"" => ""3718f3cdb94b87a5132a79fbaf586bff"";;""mode"" => ""420"";;""mtime"" => ""1636744295"");;""examples/dotnetcore/readme.txt"" => HASH(""size"" => ""1713"";;""mtime"" => ""1636744295"";;""mode"" => ""420"";;""checksum"" => ""57cb82b46f2e74a32b2c4f9a852c1d35"");;""examples/ado.net/DemoSetup/DemoSetup.cs"" => HASH(""size"" => ""15194"";;""mtime"" => ""1636744295"";;""mode"" => ""420"";;""checksum"" => ""81694c819b68c6cba64dd47e7b6959d9"");;""examples/dotnetcore/Example2/Example2.csproj"" => HASH(""size"" => ""518"";;""mtime"" => ""1636744295"";;""checksum"" => ""1ff92811ac8de45ef989235e25180446"";;""mode"" => ""420"");;""examples/ado.net/DemoSetup/DemoSetup.Designer.cs"" => HASH(""mode"" => ""420"";;""checksum"" => ""28f0eff10771dbb604dce70a3e598a1a"";;""mtime"" => ""1636744295"";;""size"" => ""6513"");;""examples/ado.net/SyncViewer/app.config"" => HASH(""size"" => ""412"";;""mtime"" => ""1636744295"";;""checksum"" => ""7626a7a30826ce466604d9af560104b9"";;""mode"" => ""420"");;""examples/ado.net/DemoSetup/AssemblyInfo.cs"" => HASH(""size"" => ""1430"";;""checksum"" => ""39811d292820845317a2e84459164dcd"";;""mode"" => ""420"";;""mtime"" => ""1636744295"");;""examples/ado.net/DemoSetup/ClothVisor.jpg"" => HASH(""mtime"" => ""1636744295"";;""mode"" => ""420"";;""checksum"" => ""2949524828d7dda3737b3c051f98a83d"";;""size"" => ""3152"");;""examples/ado.net/TableEditor/TableEditor.cs"" => HASH(""mode"" => ""420"";;""checksum"" => ""73632a582d27ae32ce7566a55311efe4"";;""mtime"" => ""1636744295"";;""size"" => ""9567"");;""examples/golang/src/lobs/lob_examples.go"" => HASH(""size"" => ""1712"";;""mtime"" => ""1636744616"";;""mode"" => ""420"";;""checksum"" => ""190627943557b012b3b0653d690210ed"");;""examples/ado.net/SyncViewer/DataSet1.xsc"" => HASH(""size"" => ""935"";;""mtime"" => ""1636744295"";;""mode"" => ""420"";;""checksum"" => ""fac8666c8229fe912ccfa315d1752143"");;""examples/ado.net/DemoSetup/WoolCap.jpg"" => HASH(""checksum"" => ""c203fc2b53aec6108acab47629cb0f45"";;""mode"" => ""420"";;""mtime"" => ""1636744295"";;""size"" => ""7040"");;""examples/ado.net/TableEditor/TableEditor.resx"" => HASH(""checksum"" => ""32a9f8db6987c2d0d6bb55fc487be5e8"";;""mode"" => ""420"";;""mtime"" => ""1636744295"";;""size"" => ""5814"");;""examples/ado.net/SyncViewer/Resources.resx"" => HASH(""size"" => ""5612"";;""mtime"" => ""1636744295"";;""mode"" => ""420"";;""checksum"" => ""0cd8c971317d19bbed44757809bcb92b"");;""examples/ado.net/TableViewer/AssemblyInfo.cs"" => HASH(""size"" => ""2426"";;""mtime"" => ""1636744295"";;""mode"" => ""420"";;""checksum"" => ""30f13277ea8f426f9c2b8d3beee26096"");;""examples/node/app2.js"" => HASH(""size"" => ""4082"";;""mode"" => ""420"";;""checksum"" => ""9d9868dcb59454b68961626c17477c9c"";;""mtime"" => ""1636744620"");;""examples/ado.net/DemoSetup/TankTop.jpg"" => HASH(""size"" => ""6678"";;""mtime"" => ""1636744295"";;""mode"" => ""420"";;""checksum"" => ""3460cd63e4a03055466a949490235c1d"");;""examples/ado.net/DemoSetup/HoodedSweatshirt.jpg"" => HASH(""mtime"" => ""1636744295"";;""checksum"" => ""c997ae04b57fd3c2419a1af14b81dd46"";;""mode"" => ""420"";;""size"" => ""8592"");;""examples/ado.net/SyncViewer/DataSet1.xss"" => HASH(""size"" => ""3"";;""mtime"" => ""1636744295"";;""checksum"" => ""ecaa88f7fa0bf610a5a26cf545dcd3aa"";;""mode"" => ""420"");;""examples/ado.net/SyncViewer/AssemblyInfo.cs"" => HASH(""checksum"" => ""d0e1070754941f5b25de53cf36ded08a"";;""mode"" => ""420"";;""mtime"" => ""1636744295"";;""size"" => ""1432"");;""examples/ado.net/SyncViewer/Form1.resx"" => HASH(""checksum"" => ""1b1fc809a318e3087db6cf7819b7fdf5"";;""mode"" => ""420"";;""mtime"" => ""1636744295"";;""size"" => ""14934"");;""examples/ado.net/DemoSetup/DemoSetup.csproj"" => HASH(""size"" => ""2922"";;""mtime"" => ""1636744295"";;""checksum"" => ""c3572424254f510460e910d53385a98e"";;""mode"" => ""420"");;""examples/ado.net/DemoSetup/ZippedSweatshirt.jpg"" => HASH(""size"" => ""7542"";;""mtime"" => ""1636744295"";;""mode"" => ""420"";;""checksum"" => ""8b30cf8468f8bd8519250f5e90698711"");;""examples/ado.net/TableViewer/TableViewer.csproj"" => HASH(""mtime"" => ""1636744295"";;""checksum"" => ""7dad486155d9f619893908864c8317bf"";;""mode"" => ""420"";;""size"" => ""4600"");;""examples/ado.net/SyncViewer/Program.cs"" => HASH(""mtime"" => ""1636744295"";;""mode"" => ""420"";;""checksum"" => ""9b865e4435e4dfe94153d974bfd54aff"";;""size"" => ""432"");;""examples/ado.net/SyncViewer/DataSet1.Designer.cs"" => HASH(""mode"" => ""420"";;""checksum"" => ""e4f8b1ab25c08eee57ebcd438b2554c8"";;""mtime"" => ""1636744295"";;""size"" => ""135431"");;""examples/dotnetcore/Example2/Program.cs"" => HASH(""size"" => ""4316"";;""mtime"" => ""1636744295"";;""mode"" => ""420"";;""checksum"" => ""512907e256a6e47f42417abff4dc848e"");;""examples/node/readme.txt"" => HASH(""mtime"" => ""1636744620"";;""mode"" => ""420"";;""checksum"" => ""c6673f15357da108bdfdd8715940340e"";;""size"" => ""311"");;""examples/readme.txt"" => HASH(""mtime"" => ""1636744294"";;""mode"" => ""420"";;""checksum"" => ""93636c29a7b533491be71524c0836649"";;""size"" => ""830"");;""examples/ado.net/SyncViewer/SyncViewer.sln"" => HASH(""mode"" => ""420"";;""checksum"" => ""1b01ec2692e38ed6c71d10900512d473"";;""mtime"" => ""1636744295"";;""size"" => ""909""));;""requires"" => ARRAY(HASH(""str"" => ""manifest"";;""id"" => ""manifest""));;""debugArchive"" => undef;;""desc"" => ""Code Examples"";;""checksum"" => ""7995255694432aaa05f0293f6aca3e6e"";;""type"" => undef;;""modtime"" => ""1673098859"";;""version"" => ""2.11.14.1636568807""));;""VERSION"" => ""1.1"";;""ID"" => ""MaxDB InstallRegistry"")